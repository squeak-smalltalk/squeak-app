'From Squeak6.0alpha of 21 September 2021 [latest update: #20638] on 22 September 2021 at 2:03 pm'!!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 10:37'!printDeprecationWarnings	SmalltalkCI deprecationWarnings ifNotEmpty: [    self      newLine;      printFold: 'deprecation_warnings' action: 'start';      setModeBoldRed;      print: 'smalltalkCI Deprecation Warnings';      resetMode;      newLine.    SmalltalkCI deprecationWarnings do: [ :each | self print: ' - ', each; newLine ].    self printFold: 'deprecation_warnings' action: 'end' ].! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 13:27'!printException: aResult	self		newLine;		printFold: aResult foldName action: 'start';		setModeBold;		print: (aResult ansiTitleContractedTo: 70);		newLine;		setModeBold;		print: aResult testError asString;		resetMode.	aResult stack ifNotNil: [		self newLine;			print: aResult stack;			resetMode ].	self		newLine;		printFold: aResult foldName action: 'end'! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 10:37'!printFold: foldName action: action	SmalltalkCI isTravisBuild		ifTrue: [ ^ self print: (SmalltalkCI travisFold: foldName action: action) ].	SmalltalkCI isGitHubActionBuild		ifTrue: [ ^ action = 'start'			ifTrue: [ self print: (SmalltalkCI ghaBeginGroup: foldName) ] 			ifFalse: [ self print: SmalltalkCI ghaEndGroup ] ].! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 14:02'!printNotPassingResults	| title |	title := (runner erroredTests + runner failedTests) asString, ' tests did not pass:'.	self printBanner: title color: SmalltalkCI ansiRed.	runner results keysAndValuesDo: [ :class :results | | notPassing |		notPassing := results select: [ :result | result passed not ].		notPassing ifNotEmpty: [			self newLine; printTitle: class asString.			notPassing do: [ :result | self printException: result ] ] ].	(SmalltalkCI isTravisBuild or: [SmalltalkCI isGitHubActionBuild])		ifFalse: [ self printNotPassingSummary ]! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 14:01'!printNotPassingSummary	self newLine; printBanner: 'Summary' color: SmalltalkCI ansiRed.	runner results keysAndValuesDo: [ :class :results | | notPassing |		notPassing := results select: [ :result | result passed not ].		notPassing ifNotEmpty: [			self newLine; printTitle: class asString.			notPassing do: [ :result | self newLine; print: result ansiTitle ] ] ]! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 13:28'!printPass: aResult	self newLine; print: aResult ansiTitle! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 14:02'!printPassingResults	| title |	self newLine; printFold: 'passing_tests' action: 'start'.	title := '(', runner passingTests asString, ' tests passed)'.	self print: title; newLine.		[ runner results keysAndValuesDo: [ :class :results | | passing |		passing := results select: [ :result | result passed ].		passing ifNotEmpty: [			self newLine; printTitle: class asString.			passing do: [ :result | self printPass: result ] ] ]	] ensure: [ self printFold: 'passing_tests' action: 'end' ]! !!SCITestReporterStdout methodsFor: 'printing' stamp: 'mt 9/22/2021 13:25'!printTitle: aTitle	self		setModeBold;		newLine; print: aTitle;		resetMode! !!SmalltalkCI class methodsFor: 'helpers' stamp: 'mt 9/22/2021 10:18'!isGitHubActionBuild	"^ (self getEnv: 'CI') = 'true'"	^ (self getEnv: 'GITHUB_ACTION') notNil! !!SmalltalkCI class methodsFor: 'folding' stamp: 'mt 9/22/2021 13:22'!ghaBeginGroup: title	^ '::group::', title! !!SmalltalkCI class methodsFor: 'folding' stamp: 'mt 9/22/2021 13:22'!ghaEndGroup	^ '::endgroup::'! !!SmalltalkCI class methodsFor: 'folding' stamp: 'mt 9/22/2021 10:28'!ghaGroup: aTitle block: aBlock	self ghaGroup: aTitle on: self stdout block: aBlock! !!SmalltalkCI class methodsFor: 'folding' stamp: 'mt 9/22/2021 10:26'!ghaGroup: aTitle on: aStream block: aBlock	aStream nextPutAll: (self ghaBeginGroup: aTitle); flush.	[ aBlock value ]		ensure: [aStream nextPutAll: self ghaEndGroup; flush ]! !!SmalltalkCI class methodsFor: 'folding' stamp: 'mt 9/22/2021 10:31'!stage: stageTitle id: anID block: aBlock	self isTravisBuild		ifTrue: [ ^ self travisFold: stageTitle id: anID block: aBlock ].	self isGitHubActionBuild		ifTrue: [ ^ self ghaGroup: stageTitle block: aBlock ].	self fold: stageTitle block: aBlock.! !!SmalltalkCISpec class methodsFor: 'defaults' stamp: 'mt 9/22/2021 10:40'!defaultName	| result |	result := SmalltalkCI smalltalkSelection ifNil: [ 'unknown' ].	SmalltalkCI isTravisBuild ifTrue: [		^ result, ' on Travis CI (', (SmalltalkCI getEnv: 'TRAVIS_JOB_NUMBER') asString, ')' ].	SmalltalkCI isAppVeyorBuild ifTrue: [		^ result, ' on AppVeyor (', (SmalltalkCI getEnv: 'APPVEYOR_JOB_NAME') asString, ')' ].	SmalltalkCI isGitLabCIBuild ifTrue: [ 		^ result, ' on GitLab CI (', (SmalltalkCI getEnv: 'CI_PIPELINE_ID') asString, '.', (SmalltalkCI getEnv: 'CI_JOB_ID') asString, ')' ].	SmalltalkCI isGitHubActionBuild ifTrue: [		^ result, ' via GitHub Action (', (SmalltalkCI getEnv: 'GITHUB_JOB') asString, '.', (SmalltalkCI getEnv: 'GITHUB_ACTION') asString, ')' ].	^ result! !SCITestReporterStdout removeSelector: #printTravisFold:action:!